{
  "info": {
    "name": "OMM Server - Member Forgot Password Testing",
    "description": "Postman collection for testing member forgot password functionality",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8080",
      "type": "string"
    },
    {
      "key": "member_email",
      "value": "john.doe@example.com",
      "type": "string"
    },
    {
      "key": "member_user_id",
      "value": "123456",
      "type": "string"
    },
    {
      "key": "member_password",
      "value": "MemberPass123",
      "type": "string"
    },
    {
      "key": "new_password",
      "value": "NewPassword123",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "1. Member Forgot Password - Send OTP",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"emailId\": \"{{member_email}}\"\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/admin-members/member-forgot-password",
          "host": ["{{base_url}}"],
          "path": ["api", "admin-members", "member-forgot-password"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Response has success status\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.success).to.eql(true);",
              "});",
              "",
              "pm.test(\"Response contains OTP\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.data).to.have.property('otp');",
              "});",
              "",
              "pm.test(\"Response contains userId\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.data).to.have.property('userId');",
              "});",
              "",
              "pm.test(\"Response contains email\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.data).to.have.property('email', '{{member_email}}');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "1b. Member Forgot Password - Send OTP (by User ID)",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"userId\": \"{{member_user_id}}\"\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/admin-members/member-forgot-password",
          "host": ["{{base_url}}"],
          "path": ["api", "admin-members", "member-forgot-password"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Response has success status\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.success).to.eql(true);",
              "});",
              "",
              "pm.test(\"Response contains OTP\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.data).to.have.property('otp');",
              "});",
              "",
              "pm.test(\"Response contains userId\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.data).to.have.property('userId', '{{member_user_id}}');",
              "});",
              "",
              "pm.test(\"Response contains email\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.data).to.have.property('email');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "3. Member Reset Password with OTP",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"userId\": \"{{member_user_id}}\",\n  \"otp\": \"1234\",\n  \"newPassword\": \"{{new_password}}\"\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/admin-members/member-reset-password",
          "host": ["{{base_url}}"],
          "path": ["api", "admin-members", "member-reset-password"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Response has success status\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.success).to.eql(true);",
              "});",
              "",
              "pm.test(\"Response contains success message\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.message).to.contain('Password reset successfully');",
              "});",
              "",
              "pm.test(\"Response contains userId\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.data).to.have.property('userId', '{{member_user_id}}');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "4. Verify New Password Works",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"userId\": \"{{member_user_id}}\",\n  \"password\": \"{{new_password}}\"\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/admin-members/member-login",
          "host": ["{{base_url}}"],
          "path": ["api", "admin-members", "member-login"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Response has success status\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.success).to.eql(true);",
              "});",
              "",
              "pm.test(\"Response contains JWT token\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.data).to.have.property('token');",
              "});",
              "",
              "pm.test(\"Login successful with new password\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.message).to.contain('Member login successful');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "5. Verify Old Password No Longer Works",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"userId\": \"{{member_user_id}}\",\n  \"password\": \"{{member_password}}\"\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/admin-members/member-login",
          "host": ["{{base_url}}"],
          "path": ["api", "admin-members", "member-login"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 400 (Bad Request)\", function () {",
              "    pm.response.to.have.status(400);",
              "});",
              "",
              "pm.test(\"Response has failure status\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.success).to.eql(false);",
              "});",
              "",
              "pm.test(\"Old password rejected\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.message).to.contain('Invalid password');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "5. Test Invalid Email",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"email\": \"invalid@example.com\"\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/admin-members/member-forgot-password",
          "host": ["{{base_url}}"],
          "path": ["api", "admin-members", "member-forgot-password"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 400\", function () {",
              "    pm.response.to.have.status(400);",
              "});",
              "",
              "pm.test(\"Response has failure status\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.success).to.eql(false);",
              "});",
              "",
              "pm.test(\"Invalid email message\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.message).to.contain('not found');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "6. Test Invalid OTP",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"userId\": \"{{member_user_id}}\",\n  \"otp\": \"9999\",\n  \"newPassword\": \"AnotherPassword123\"\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/admin-members/member-reset-password",
          "host": ["{{base_url}}"],
          "path": ["api", "admin-members", "member-reset-password"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 400\", function () {",
              "    pm.response.to.have.status(400);",
              "});",
              "",
              "pm.test(\"Response has failure status\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.success).to.eql(false);",
              "});",
              "",
              "pm.test(\"Invalid OTP message\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.message).to.contain('Invalid OTP');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    }
  ]
}